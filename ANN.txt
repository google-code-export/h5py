Announcing HDF5 for Python (h5py) 2.1.1
=======================================

We are pleased to announce the availability of HDF5 for Python (h5py) 2.1.1!

The h5py package is a Pythonic interface to the HDF5 binary data format.
It lets you store huge amounts of numerical data, and easily manipulate that
data from NumPy. For example, you can slice into multi-terabyte datasets
stored on disk, as if they were real NumPy arrays. Thousands of datasets 
can be stored in a single file, categorized and tagged however you want.

H5py uses straightforward NumPy and Python metaphors, like dictionary and
NumPy array syntax. For example, you can iterate over datasets in a file,
or check out the .shape or .dtype attributes of datasets. You don't need to
know anything special about HDF5 to get started.

In addition to the easy-to-use high level interface, h5py rests on an
object-oriented Cython wrapping of the HDF5 C API. Almost anything you can do
from C in HDF5, you can do from h5py.

Best of all, the files you create are in a widely-used standard binary format,
which you can exchange with other people, including those who use programs 
like IDL and MATLAB.

All downloads and documentation are available at the new h5py web site:

* http://www.h5py.org


What's new in h5py 2.1.1
------------------------

* Fixed memory leak affecting variable-length strings (thanks to Luke
  Campbell for excellent bug reports)

* Fixed threading deadlock related to H5Aiterate calls

* Disabled spurious HDF5 error messages related to containership testing
  in threaded programs

* New identifier management system to prepare for HDF5 1.10
